package com.huawei.systemmanager.antimal.ui;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.ImageView;
import android.widget.TextView;
import com.huawei.systemmanager.R;
import com.huawei.systemmanager.comm.widget.CommonAdapter;

public class MalwareAppListAdapter extends CommonAdapter<MalwareAppInfo> {
    private OnCheckedChangeListener mOnCheckedChangeListener;

    private static class MalwareAppHolder {
        CheckBox checker;
        TextView feature;
        ImageView icon_app;
        TextView indicator;
        TextView title;

        private MalwareAppHolder() {
        }
    }

    public MalwareAppListAdapter(Context context, OnCheckedChangeListener listener) {
        super(context);
        this.mOnCheckedChangeListener = listener;
    }

    protected View newView(int position, ViewGroup parent, MalwareAppInfo item) {
        View convertView = this.mInflater.inflate(R.layout.malware_app_detail, parent, false);
        MalwareAppHolder mMalwareAppView = new MalwareAppHolder();
        mMalwareAppView.icon_app = (ImageView) convertView.findViewById(R.id.app_icon);
        mMalwareAppView.title = (TextView) convertView.findViewById(R.id.app_name);
        mMalwareAppView.feature = (TextView) convertView.findViewById(R.id.isShareUidApp);
        mMalwareAppView.indicator = (TextView) convertView.findViewById(R.id.level_description);
        mMalwareAppView.checker = (CheckBox) convertView.findViewById(R.id.app_active);
        convertView.setTag(mMalwareAppView);
        return convertView;
    }

    protected void bindView(int position, View view, MalwareAppInfo item) {
        MalwareAppHolder holder = (MalwareAppHolder) view.getTag();
        holder.checker.setTag(Integer.valueOf(position));
        holder.checker.setOnCheckedChangeListener(null);
        holder.checker.setChecked(item.isChecked());
        holder.checker.setOnCheckedChangeListener(this.mOnCheckedChangeListener);
        holder.icon_app.setImageDrawable(item.getIcon());
        holder.title.setText(item.getPkgTitle());
        if (item.getHasFeature()) {
            holder.feature.setVisibility(0);
        } else {
            holder.feature.setVisibility(8);
        }
        if (item.isRecommendClear()) {
            holder.indicator.setVisibility(0);
        } else {
            holder.indicator.setVisibility(8);
        }
    }
}
